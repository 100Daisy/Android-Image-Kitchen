#!/sbin/sh
# AIK-Mobile Installer Script: Recovery Flashable Zip
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIP="$3";
ui_print() { echo -e "ui_print $1\nui_print" > $OUTFD; }
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_progress() { echo "set_progress $1" > $OUTFD; }
file_getprop() { grep "^$2" "$1" | head -n1 | cut -d= -f2; }
set_perm() {
  uid=$1; gid=$2; mod=$3;
  shift 3;
  chown $uid:$gid "$@" || chown $uid.$gid "$@";
  chmod $mod "$@";
}
set_perm_recursive() {
  uid=$1; gid=$2; dmod=$3; fmod=$4;
  shift 4;
  until [ ! "$1" ]; do
    chown -R $uid:$gid "$1" || chown -R $uid.$gid "$1";
    find "$1" -type d -exec chmod $dmod {} +;
    find "$1" -type f -exec chmod $fmod {} +;
    shift;
  done;
}
abort() {
  ui_print " ";
  ui_print "Your system has not been changed.";
  ui_print " ";
  ui_print "Script will now exit...";
  ui_print " ";
  umount /system;
  umount /data;
  umount /cache;
  exit 1;
}

ui_print " ";
ui_print "Android Image Kitchen - Mobile Edition";
ui_print "Installer Script";
ui_print "by osm0sis @ xda-developers";
show_progress 1.34 0;

ui_print " ";
ui_print "Mounting...";
mount -o ro /system;
mount /data;
mount /cache;
set_progress 0.2;

ui_print " ";
ui_print "Extracting files...";
mkdir -p /tmp/aik-mobile;
cd /tmp/aik-mobile;
unzip -o "$ZIP";
set_progress 0.3;

ui_print " ";
ui_print "Installing to /data/local/AIK-mobile/ ...";
abi=`getprop ro.product.cpu.abi`;
case $abi in
  arm*|x86*|mips*) ;;
  *) abi=`file_getprop /default.prop ro.product.cpu.abi`;;
esac;
test -f /system/system/build.prop && root=/system;
case $abi in
  arm*|x86*|mips*) ;;
  *) abi=`file_getprop $root/system/build.prop ro.product.cpu.abi`;;
esac;
case $abi in
  arm64*) arch=arm64;;
  arm*) arch=arm;;
  x86_64*) arch=x86_64;;
  x86*) arch=x86;;
  mips64*) arch=mips64;;
  mips*) arch=mips;;
  *) ui_print "Unknown architecture: $abi"; abort;;
esac;
ui_print "Using architecture: $arch";
cp -rf data/* /data;
cp -rf bin/$arch/* /data/local/AIK-mobile/bin/;
set_perm_recursive 0 0 0755 0755 "/data/local/AIK-mobile";
set_perm_recursive 0 0 0755 0644 "/data/local/AIK-mobile/bin/avb" "/data/local/AIK-mobile/bin/chromeos";
set_perm 0 0 0644 "/data/local/AIK-mobile/authors.txt" "/data/local/AIK-mobile/bin/androidbootimg.magic" "/data/local/AIK-mobile/bin/BootSignature_Android.jar" "/data/local/AIK-mobile/bin/magic";
set_progress 0.8;

ui_print " ";
suimg=$(ls /data/su.img || ls /cache/su.img || ls /data/magisk.img || ls /cache/magisk.img) 2>/dev/null;
mnt=/$(basename $suimg .img);
if [ "$suimg" ]; then
  umount $mnt;
  test ! -e $mnt && mkdir $mnt;
  mount -t ext4 -o rw,noatime $suimg $mnt;
  for i in 0 1 2 3 4 5 6 7; do
    case `mount` in
      *" $mnt "*) break;;
    esac;
    loop=/dev/block/loop$i;
    if [ ! -f "$loop" -o ! -b "$loop" ]; then
      mknod $loop b 7 $i;
    fi;
    losetup $loop $suimg && mount -t ext4 -o loop $loop $mnt;
  done;
  test "$mnt" == "/magisk" && magisk=/aik-mobile/system;
  target=$mnt$magisk/bin;
else
  mount -o rw,remount /system;
  mount /system;
  target=$root/system/xbin;
fi;
ui_print "Creating helper script $target/aik ...";
mkdir -p $target;
cp -pf "/data/local/AIK-mobile/bin/aik" "$target/aik";
if [ "$magisk" ]; then
  cp -f module.prop /magisk/aik-mobile/;
  touch /magisk/aik-mobile/auto_mount;
fi;
set_progress 1.0;

ui_print " ";
ui_print "Unmounting...";
umount $mnt;
umount /system;
umount /data;
umount /cache;
set_progress 1.2;

cd /tmp;
rm -rf /tmp/aik-mobile;
ui_print " ";
ui_print "Done!";
ui_print " ";
ui_print "Run 'aik' from the commandline when booted";
ui_print "then 'unpackimg.sh -.img' to get started";
set_progress 1.34;
exit 0;

